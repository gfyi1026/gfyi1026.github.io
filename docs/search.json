[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Guy Fuchs",
    "section": "",
    "text": "Hi there, my name is Guy Fuchs and I am a junior at Pomona College studying computer science and physics. I also play on the soccer team here, and love traveling."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is my first project for my intro to data science class.\nThis is me playing around with R and my website\n\n1 + 2\n\n[1] 3"
  },
  {
    "objectID": "premierleague.html",
    "href": "premierleague.html",
    "title": "Premier League 2021–22",
    "section": "",
    "text": "Dataset page: TidyTuesday: Premier League Match Data\nOriginal source: Official Premier League Statistics\n\n\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\n\nsoccer &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2023/2023-04-04/soccer21-22.csv')\n\nteam_goals &lt;- soccer |&gt;\n  group_by(HomeTeam) |&gt;\n  summarise(avg_goals = mean(FTHG, na.rm = TRUE))\n\nggplot(team_goals, aes(x = HomeTeam, y = avg_goals)) +\n  geom_col(fill = \"blue\") +\n  labs(\n    title = \"Average Home Goals per Match by Team (2021–22)\",\n    x = \"Team\",\n    y = \"Average Goals\",\n    caption = \"Source: TidyTuesday 2023-04-04, Premier League 2021–22\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "olympics.html",
    "href": "olympics.html",
    "title": "Olympics Athletes and Medals",
    "section": "",
    "text": "Dataset page: TidyTuesday: Olympics 2024-08-06\nOriginal source: Sports-Reference.com Olympic History Project\n\n\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\n\nolympics &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-08-06/olympics.csv')\n\nmedals_by_year &lt;- olympics |&gt;\n  filter(!is.na(medal)) |&gt;\n  group_by(year) |&gt;\n  summarise(n_medals = n())\n  \nggplot(medals_by_year, aes(x = year, y = n_medals)) +\n  geom_col(fill = \"blue\") +\n  labs(\n    title = \"Number of Recorded Medals by Year\",\n    x = \"Olympic Year\",\n    y = \"Medal Count\",\n    caption = \"Source: TidyTuesday 2024-08-06, Kaggle 120 Years of Olympic History\"\n  )"
  },
  {
    "objectID": "kidzbop.html",
    "href": "kidzbop.html",
    "title": "Kidz Bop Censored Lyrics",
    "section": "",
    "text": "Dataset page: The Pudding – Kidz Bop Data\nOriginal source: Kidz Bop Censored Lyrics Dataset (Hehmeyer et al., The Pudding)\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(scales)\n\n\n\nkb &lt;- read_csv(\"https://raw.githubusercontent.com/the-pudding/data/master/kidz-bop/KB_censored-lyrics.csv\")\n\ncategory_counts &lt;- kb |&gt;\n  count(category) |&gt;\n  head(10)\n\ntop8 &lt;- head(category_counts, 8) \n\nggplot(data = top8, aes(x = reorder(category, n), y = n)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(\n    title = \"What Kidz Bop censors most\",\n    subtitle = \"Top categories in the censored-lyrics dataset\",\n    x = \"Category\",\n    y = \"Censored instances\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThis plot helps to show which types of content are most frequently censored in Kidz Bop songs. From the counts, we can see that profanity and sexual references make up the largest portion of censored lyrics, followed closely by alcohol and drug references. Categories like violence, identity, and other themes appear much less often.\nThese patterns reveal that Kidz Bop’s censorship choices focus mainly on removing language that could be considered inappropriate or too mature for a younger audience, while other categories are less frequently flagged. This highlights how producers are likely prioritizing a “family-friendly” tone in their songs.\n\nkb|&gt;\n  mutate(my_word=str_extract_all(ogLyric, \"(?&lt;=\\\\bmy\\\\s)\\\\w+\")) |&gt;\n  select(my_word) |&gt;\n  unnest(my_word) |&gt;\n  count(my_word, sort = TRUE) |&gt;\n  head(10)\n\n# A tibble: 10 × 2\n   my_word       n\n   &lt;chr&gt;     &lt;int&gt;\n 1 nights       18\n 2 woman        16\n 3 God          11\n 4 body          8\n 5 cigarette     8\n 6 hand          8\n 7 neck          7\n 8 chest         5\n 9 ex            5\n10 lips          5\n\n\nThis table shows which words most often follow the word “my” in the original lyrics of the Kidz Bop songs. We can see that the top three words that follow “my” are nights, woman, and God, highlighting the personal and relational themes in censored lyrics.\n\nkb |&gt;\n  mutate(first_three_words = str_extract(ogLyric, \"^(?:\\\\S+\\\\s+){0,2}\\\\S+\")) |&gt;  \n  count(first_three_words, sort = TRUE) |&gt;\n  head(10)\n\n# A tibble: 10 × 2\n   first_three_words       n\n   &lt;chr&gt;               &lt;int&gt;\n 1 Blow a kiss,           36\n 2 Be my woman,           16\n 3 The Bowery, whiskey    10\n 4 And I don't             8\n 5 I'm too hot             8\n 6 Kissed her on           8\n 7 Ain't another woman     7\n 8 And I got               7\n 9 Can't drink without     7\n10 I want you              7\n\n\nThis table shows the most common three-word openings found in the original lyrics of Kidz Bop songs. We can see that many of the top phrases like “Blow a kiss”, “Be my woman”, and “Kissed her on” start with actions and expressions of relationships. These repeated openings show that censored lyrics often begin with personal and romantic themes that would likely need to be toned down for the younger audience of Kidz Bop.\n\nkb_lower &lt;- kb |&gt;\n  filter(!is.na(year), !is.na(ogLyric))|&gt;\n  mutate(og_lower = str_to_lower(ogLyric))\n\nreg_expression &lt;- \"\\\\b(love|lover|kiss|kissing|baby|girlfriend|boyfriend|girl|boy|wife|husband|ex|partner)\\\\b\"\n\nby_year &lt;- kb_lower |&gt;\n  mutate(has_relationship = str_detect(og_lower, reg_expression)) |&gt;\n  group_by(year) |&gt;\n  summarise(total = n(), relationship = sum(has_relationship, na.rm = TRUE), pct = relationship / total) |&gt;\n  filter(total &gt;= 20) |&gt; # helps to stabilize the percentages\n  ungroup()\n\nggplot(by_year, aes(x = year, y = pct)) +\n  geom_line() +\n  geom_point() +\n  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n  labs(\n    title = \"Lyrics mentioning relationships over time\",\n    subtitle = \"Share of original lyrics with partner or family terms (years with 20+ rows)\",\n    x = \"Year\",\n    y = \"Percent of lyrics mentioning relationships\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThis plots shows how often relationship and love-related words such as love, kiss, baby, girlfriend, boyfriend, etc. appear in the original Kidz Bop lyrics over time. Although the percentages remain small overall, there are clear ups and downs across the years. At peaks around 2014-2015, the data suggests that more popular songs from those years contained romantic and affectionate language that Kidz Bop chose to censor and modify. On the other hand, lower points indicate years when songs with relationship themes were a little bit less common. Overall, we can see how the romantic tone of pop music can change over time and how Kidz Bop’s censorship accommodates those changing tones."
  },
  {
    "objectID": "project3.html",
    "href": "project3.html",
    "title": "Simulation Study",
    "section": "",
    "text": "Dataset page: R Datasets Package Original source: Henderson and Velleman (1981), Building Multiple Regression Models Interactively, Biometrics\n\n\n\nCode\nset.seed(47)\nlibrary(tidyverse)\nlibrary(purrr)\n\n\nI will compare MPG between manual and automatic cars in the build-in “mtcars” dataset. I will compute the observed difference (Manual - Automatic) and then simulate the null hypothesis, being “no relationship”, by permuting the transmission labels many times and recomputing the difference. I will report a one-sided p-value and show the null distribution. The main variables we will be dealing with are “mpg” (numerical fuel economy) and “am” (categorical transmission: Automatics vs Manual). This will be interesting to analyze as MPG is a practical measure of efficiency that all drivers understand to be crucial for financial decisions when it comes to purchasing cars, so this simulation will help us understand if the relationship could arise by chance with no true relationship.\n\ncars &lt;- as_tibble(mtcars, rownames = \"model\") |&gt;\n  mutate(am = factor(am, c(0,1), labels = c(\"Automatic\", \"Manual\")))\ncars |&gt;\n  head(n=5)\n\n# A tibble: 5 × 12\n  model          mpg   cyl  disp    hp  drat    wt  qsec    vs am     gear  carb\n  &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Mazda RX4     21       6   160   110  3.9   2.62  16.5     0 Manu…     4     4\n2 Mazda RX4 W…  21       6   160   110  3.9   2.88  17.0     0 Manu…     4     4\n3 Datsun 710    22.8     4   108    93  3.85  2.32  18.6     1 Manu…     4     1\n4 Hornet 4 Dr…  21.4     6   258   110  3.08  3.22  19.4     1 Auto…     3     1\n5 Hornet Spor…  18.7     8   360   175  3.15  3.44  17.0     0 Auto…     3     2\n\n\n\nggplot(cars, aes(x = am, y = mpg, fill = am)) +\n  geom_boxplot(width = 0.55, alpha = 0.7, outlier.shape = NA) +\n  geom_jitter(width = 0.1) +\n  labs(\n    title = \"Fuel economy (MPG) by transmission\",\n    x = \"Transmission\", y = \"MPG\", fill = \"Transmission\"\n    ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThis boxplot compares fuel economy, MPG, between cars with automatic and manual transmissions in the “mtcars” dataset. In the plot, every dot represents one car, and from the boxplot we can see that manual cars generally have higher MPG than automatic cars, with both a higher median and a wider spread of values. Thus, this suggests that manual transmissions may be more fuel-efficent on average in this dataset.\nTo visualize the original data:\n\ncars |&gt;\n  group_by(am) |&gt;\n  summarise(\n    n = n(),\n    mean_mpg = mean(mpg),\n    median_mpg = median(mpg)\n  )\n\n# A tibble: 2 × 4\n  am            n mean_mpg median_mpg\n  &lt;fct&gt;     &lt;int&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 Automatic    19     17.1       17.3\n2 Manual       13     24.4       22.8\n\n\nNow, for the simulation part:\n\nmean_diff &lt;- function(data){\n  manual_mpg &lt;- mean(data$mpg[data$am == \"Manual\"])\n  auto_mpg   &lt;- mean(data$mpg[data$am == \"Automatic\"])\n  return(manual_mpg - auto_mpg)\n}\n\nperm_once &lt;- function(data){\n  data_perm &lt;- data\n  data_perm$am &lt;- sample(data_perm$am)\n  mean_diff(data_perm)\n}\n\nObserved difference in means:\n\nobs &lt;- mean_diff(cars)\nobs\n\n[1] 7.244939\n\n\nNull distribution under “no relationship” and one-side p-value:\n\nB &lt;- 5000\nnull_vals &lt;- map_dbl(1:B, function(i) perm_once(cars))\np_value &lt;- mean(null_vals &gt;= obs)\n\ntibble(\n  observed_diff = obs,\n  p_value_one_sided = p_value,\n  permutations = B\n)\n\n# A tibble: 1 × 3\n  observed_diff p_value_one_sided permutations\n          &lt;dbl&gt;             &lt;dbl&gt;        &lt;dbl&gt;\n1          7.24                 0         5000\n\n\nFor reference, 2e-04 is equivalent to 0.0002.\nDescription of the simulation:\nThe simulation works by repeatedly shuffling the transmission labels to represent an environment where there is no true relationship between transmission type and fuel economy (the null hypothesis). - The function mean_diff() calculates the difference in average MPG between manual and automatic cars for any given dataset. - The function perm_once() performs one permutation by randomly reassigning transmission labels and then calling mean_diff() to get a new difference value. - I used map_dbl() to repeat this process 5,000 times, because it provides a fast way to apply the same function many times and store the numeric results in a single vector. This created a simulated null distribution of MPG differences that we can compare the observed difference against to determine how different it is the under the null model.\nPlotting the null distribution:\n\ntibble(null = null_vals) |&gt;\n  ggplot(aes(x = null)) +\n  geom_histogram(bins = 40, alpha = 0.85) +\n  geom_vline(xintercept = obs, linetype = \"dashed\") +\n  labs(\n    title = \"Permutation null for MPG difference (Manual − Automatic)\",\n    x = \"Null statistic (Manual − Automatic mean MPG)\",\n    y = \"Count\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThis histogram shows the null distribution of differences in mean MPG between manual and automatic cars, created by randomly shuffling the transmission labels 5,000 times. The x-axis represents the simulated differences under the null hypothesis of no relationship between transmission and MPG, with the y-axis showing how often each difference occurred. The dashed vertical line marks the observed difference from the real data, which was about 7.24 MPG. This observed value lies far to the right of all simulated values, and thus suggests that such a large difference would be extremely unlikely if transmission had no effect on fuel economy.\nTo conclude:\nIn this analysis, I conducted a permutation test to determine whether cars with manual transmission have higher fuel economy, MPG, than cars with automatic transmission in the “mtcars” dataset. I computed the observed difference in mean MPG and then simulated the null hypothesis by repeatedly shuffling transmission labels and recalculating the mean difference 5,000 times. The resulting null distribution was centered around 0, while the observed difference (7.24 MPG) was far outside this range, giving a p-value less than 0.01. This indicated that it is highly unlikely the difference in MPG occurred by chance, providing very strong evidence against the null model, and ultimately that manual cars are more fuel-efficient on average."
  }
]